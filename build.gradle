plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.FlagBBS'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// plain.jar 방지
jar {
    enabled = false
}

dependencies {
    // Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // Spring Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail:'

    // DB Communication
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'

    // aws
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'com.amazonaws:aws-java-sdk-ses:1.12.367'

    // QueryDSL 추가
    // QueryDSL JPA : 실제 애플리케이션 코드를 작성할 때 필요함
    implementation "com.querydsl:querydsl-jpa:5.0.0"

    // QueryDSL 추가
    // QueryDSL APT : 코드 제네레이션 -> QHello 만들어주는 라이브러리
    implementation "com.querydsl:querydsl-apt:5.0.0"
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //JWT
    compileOnly('io.jsonwebtoken:jjwt-api:0.11.5')
    runtimeOnly('io.jsonwebtoken:jjwt-impl:0.11.5')
    runtimeOnly('io.jsonwebtoken:jjwt-jackson:0.11.5')

    // Spring Scheduler
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Web Basic
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Utils
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.0'

    // TEST Implementation
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.assertj:assertj-core:3.23.1"

    // JUnit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testCompileOnly 'junit:junit:4.13.2'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.9.0'

    // Swagger
    implementation("io.springfox:springfox-boot-starter:3.0.0")
    implementation("io.springfox:springfox-swagger-ui:3.0.0")
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl Setting
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}